# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt6 UI code generator 6.4.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import json

from PyQt6 import QtCore, QtGui, QtWidgets
import array as arr

from PyQt6.QtGui import QWindow
from PyQt6.QtWidgets import QMessageBox

affairs_mass = []

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(780, 550)
        MainWindow.setMinimumSize(QtCore.QSize(780, 550))
        MainWindow.setMaximumSize(QtCore.QSize(780, 550))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.objFeeld = QtWidgets.QFrame(self.centralwidget)
        self.objFeeld.setEnabled(True)
        self.objFeeld.setGeometry(QtCore.QRect(-1, 0, 801, 552))
        self.objFeeld.setStyleSheet("background-color: rgb(218, 218, 218);\n"
"background-image: url(resources/bg_4.png);\n")
        self.objFeeld.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.objFeeld.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.objFeeld.setObjectName("objFeeld")
        self.addButton = QtWidgets.QPushButton(self.objFeeld)
        self.addButton.setEnabled(True)
        self.addButton.setGeometry(QtCore.QRect(700, 490, 50, 50))
        self.addButton.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.addButton.setStyleSheet("QPushButton {\n"
"    background-image: url(/Users/nikolaismirnov/Documents/GitHub/ToDo/resources/add_button.png);\n"
"    border: none;\n"
"    outline: none;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-image: url(/Users/nikolaismirnov/Documents/GitHub/ToDo/resources/add_button_hover.png);\n"
"    border: none;\n"
"    outline: none;\n"
"    border-radius: 5px;\n"
"}")
        self.addButton.setText("")
        self.addButton.setObjectName("addButton")
        self.scrollArea = QtWidgets.QScrollArea(self.objFeeld)
        self.scrollArea.setGeometry(QtCore.QRect(20, 10, 761, 470))
        self.scrollArea.setStyleSheet("border: none;\n"
"background: rgba(255, 255, 255, 0);")
        self.scrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.scrollArea.setLineWidth(0)
        self.scrollArea.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarPolicy.ScrollBarAlwaysOff)
        self.scrollArea.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarPolicy.ScrollBarAlwaysOff)
        self.scrollArea.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContentsOnFirstShow)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 761, 650))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SizeConstraint.SetDefaultConstraint)
        self.verticalLayout.setContentsMargins(0, 10, 0, 10)
        self.verticalLayout.setSpacing(20)
        self.verticalLayout.setObjectName("verticalLayout")

        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.scrollArea.raise_()
        self.addButton.raise_()

        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def add_item(self, affairs_json):
        self.Item_n = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.Item_n.setEnabled(True)
        if affairs_json["text"] != "":
            self.Item_n.setMinimumSize(QtCore.QSize(750, 110))
            self.Item_n.setMaximumSize(QtCore.QSize(750, 110))
        else:
            self.Item_n.setMinimumSize(QtCore.QSize(750, 82))
            self.Item_n.setMaximumSize(QtCore.QSize(750, 82))
        self.Item_n.setStyleSheet("background: none;")
        self.Item_n.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.Item_n.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.Item_n.setObjectName("Item_n")

        self.label_n_2 = QtWidgets.QLabel(self.Item_n)
        self.label_n_2.setGeometry(QtCore.QRect(10, 10, 31, 31))
        self.label_n_2.setStyleSheet("font-size: 22px;\n"
                                     "background-color: rgb(125, 232, 109);\n"
                                     "color: white;\n"
                                     "border-top-left-radius: 10px;")
        self.label_n_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_n_2.setObjectName("label_44")

        self.label_n_3 = QtWidgets.QLabel(self.Item_n)
        self.label_n_3.setGeometry(QtCore.QRect(40, 10, 691, 31))
        self.label_n_3.setStyleSheet("background-color: rgb(228, 247, 246);\n"
                                     "border-top-right-radius: 10px;\n"
                                     "font-size: 18px;\n"
                                     "padding-left: 20px;\n"
                                     "color: rgb(63, 63, 63)")
        self.label_n_3.setObjectName("label_45")
        self.verticalLayout.addWidget(self.Item_n)

        self.label_n_1 = QtWidgets.QLabel(self.Item_n)
        if affairs_json["text"] != "":
            self.label_n_1.setGeometry(QtCore.QRect(10, 40, 721, 61))
            self.label_n_1.setMinimumSize(QtCore.QSize(0, 61))
            self.label_n_1.setText(affairs_json["text"])
        else:
            self.label_n_1.setGeometry(QtCore.QRect(10, 40, 721, 31))
            self.label_n_1.setMinimumSize(QtCore.QSize(0, 10))
        self.label_n_1.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.IBeamCursor))
        self.label_n_1.setStyleSheet("background: rgba(225, 225, 225, 150);\n"
                                     "border-bottom-left-radius: 10px;\n"
                                     "border-bottom-right-radius: 10px;\n"
                                     "font-size: 15px;\n"
                                     "padding: 5px 15px 5px 15px;\n"
                                     "color: rgb(90, 90, 90)")
        self.label_n_1.setTextFormat(QtCore.Qt.TextFormat.AutoText)
        self.label_n_1.setScaledContents(False)
        self.label_n_1.setAlignment(
            QtCore.Qt.AlignmentFlag.AlignLeading | QtCore.Qt.AlignmentFlag.AlignLeft | QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_n_1.setTextInteractionFlags(QtCore.Qt.TextInteractionFlag.LinksAccessibleByMouse)
        self.label_n_1.setObjectName("label_43")

        if affairs_json["data"] != "":
            self.label_n_4 = QtWidgets.QLabel(self.Item_n)
            self.label_n_4.setGeometry(QtCore.QRect(631, 10, 100, 31))
            self.label_n_4.setStyleSheet("background-color: rgb(215, 236, 235);\n"
                                         "border-top-right-radius: 10px;\n"
                                         "font-size: 18px;\n"
                                         "padding-left: 5px;\n"
                                         "color: rgb(63, 63, 63)")
            self.label_n_4.setObjectName("label_45")
            self.verticalLayout.addWidget(self.Item_n)
            self.label_n_4.setText(affairs_json["data"])

        self.label_n_3.setText(affairs_json["name"])
        if affairs_json["priority"] == 1:
            self.label_n_2.setStyleSheet("font-size: 22px;\n"
                                         "background-color: rgb(80, 172, 83);\n"
                                         "color: white;\n"
                                         "border-top-left-radius: 10px;")
        if affairs_json["priority"] == 2:
            self.label_n_2.setStyleSheet("font-size: 22px;\n"
                                         "background-color: rgb(212, 207, 83);\n"
                                         "color: white;\n"
                                         "border-top-left-radius: 10px;")
        if affairs_json["priority"] == 3:
            self.label_n_2.setStyleSheet("font-size: 22px;\n"
                                         "background-color: rgb(202, 71, 71);\n"
                                         "color: white;\n"
                                         "border-top-left-radius: 10px;")
        return self.Item_n

    def add_affairs(self, MainWindow, affairs_json):
        affairs_mass.append(self.add_item(affairs_json))

    # def masageBox(self):
    #     add = QMessageBox()
    #
    #     add.resize(762, 263)
    #     add.setMinimumSize(QtCore.QSize(762, 263))
    #     add.setMaximumSize(QtCore.QSize(762, 263))
    #
    #     frame = QtWidgets.QFrame(add)
    #     frame.setStyleSheet("background-color: red;")
    #     frame.setGeometry(QtCore.QRect(0, 0, 762, 263))
    #
    #     text = QtWidgets.QTextEdit(add)
    #     text.setGeometry(QtCore.QRect(71, 20, 490, 31))
    #
    #     add.exec()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "ToDo"))

class Add_Box (QtWidgets.QDialog):
    def __init__(self, parent= None):
        super(Add_Box, self).__init__(parent)

        self.priority = 1

        self.resize(762, 263)

        self.verticalLayout = QtWidgets.QVBoxLayout(self)
        self.verticalLayout.setObjectName("verticalLayout")

        self.frame = QtWidgets.QFrame(self)
        self.frame.setGeometry(QtCore.QRect(0, 0, 762, 263))
        self.frame.setStyleSheet("background-color: rgb(249, 249, 249);")

        self.name = QtWidgets.QTextEdit(self.frame)
        self.name.setGeometry(QtCore.QRect(71, 20, 490, 31))
        self.name.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarPolicy.ScrollBarAlwaysOff)
        self.name.setStyleSheet("background-color: rgb(217, 217, 217);"
                                "border: none;"
                                "border-radius: 10px;"
                                "font-size: 19px;"
                                "padding-left: 10px;")
        self.name.setPlaceholderText("Name")

        self.data = QtWidgets.QTextEdit(self.frame)
        self.data.setGeometry(QtCore.QRect(581, 20, 161, 31))
        self.data.setStyleSheet("background-color: rgb(217, 217, 217);"
                                "border: none;"
                                "border-radius: 10px;"
                                "font-size: 19px;"
                                "padding-left: 10px;")
        self.data.setPlaceholderText("01.01.2022")

        self.text = QtWidgets.QTextEdit(self.frame)
        self.text.setGeometry(QtCore.QRect(20, 71, 722, 120))
        self.text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarPolicy.ScrollBarAlwaysOff)
        self.text.setStyleSheet("background-color: rgb(217, 217, 217);"
                                "border: none;"
                                "border-radius: 10px;"
                                "font-size: 19px;"
                                "padding-left: 10px;")
        self.text.setPlaceholderText("Text")

        self.priority_1 = QtWidgets.QRadioButton(self.frame)
        self.priority_1.setGeometry(QtCore.QRect(20, 211, 31, 31))
        self.priority_1.setChecked(True)
        # self.priority_1.setDown(True)
        # self.priority_1.toggled.connect(self.new_priority(1))
        self.priority_1.setStyleSheet("QRadioButton {"
                                      "background-color: rgb(169, 220, 170);"
                                      "border-radius: 10px;"
                                      "outline: none;"
                                      "}"
                                      "QRadioButton:checked {"
                                      "background-color: rgb(80, 172, 83);"
                                      "border-radius: 10px;"
                                      "outline: none;"
                                      "}")
        self.priority_2 = QtWidgets.QRadioButton(self.frame)
        self.priority_2.setGeometry(QtCore.QRect(71, 211, 31, 31))
        # self.priority_2.toggled.connect(self.new_priority(2))
        self.priority_2.setStyleSheet("QRadioButton {"
                                      "background-color: rgb(232, 228, 148);"
                                      "border-radius: 10px"
                                      "}"
                                      "QRadioButton:checked {"
                                      "background-color: rgb(236, 228, 44);"
                                      "border-radius: 10px"
                                      "}")
        self.priority_3 = QtWidgets.QRadioButton(self.frame)
        self.priority_3.setGeometry(QtCore.QRect(122, 211, 31, 31))
        # self.priority_3.toggled.connect(self.new_priority(3))
        self.priority_3.setStyleSheet("QRadioButton {"
                                      "background-color: rgb(226, 166, 166);"
                                      "border-radius: 10px"
                                      "}"
                                      "QRadioButton:checked {"
                                      "background-color: rgb(202, 71, 71);"
                                      "border-radius: 10px"
                                      "}")

        self.button_add = QtWidgets.QPushButton(self.frame)
        self.button_add.setGeometry(QtCore.QRect(710, 210, 32, 32))
        self.button_add.setStyleSheet("QPushButton {"
                                      "border: none;"
                                      "outline: none;"
                                      "background-color: rgb(169, 220, 170);"
                                      "border-radius: 10px;"
                                      "}"
                                      "QPushButton:hover {"
                                      "border: none;"
                                      "outline: none;"
                                      "background-color: rgb(80, 172, 83);"
                                      "border-radius: 10px"
                                      "}")


    def new_priority(self, new_priority):
        self.priority = new_priority